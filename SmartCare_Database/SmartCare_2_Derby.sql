CREATE TABLE APPOINTMENT_STATUS ( 
	ASID                 INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
	APPOINTMENT_STATUS   varchar(45)   ,
	CONSTRAINT PK_APPOINTMENT_STATUS PRIMARY KEY ( ASID )
 );

CREATE TABLE APPOINTMENT_TYPE ( 
	ATID                 INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
	TYPE_NAME            varchar(45) NOT NULL  ,
	CONSTRAINT PRIMARY1 PRIMARY KEY ( ATID )
 );

CREATE TABLE EMPLOYEE_TYPE ( 
	ETID                 INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
	TYPE_NAME            varchar(45) NOT NULL  ,
	CONSTRAINT PRIMARY2 PRIMARY KEY ( ETID )
 );

CREATE TABLE ORGANISATION_TYPE ( 
	OTID                 INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
	TYPE_NAME            varchar(45) NOT NULL  ,
	CONSTRAINT PRIMARY3 PRIMARY KEY ( OTID )
 );

CREATE TABLE PATIENT_TYPE ( 
	PTID                 INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
	TYPE_NAME            varchar(45) NOT NULL  ,
	CONSTRAINT PRIMARY8 PRIMARY KEY ( PTID )
 );

CREATE TABLE USER_STATUS ( 
	USID                 INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
	USER_STATUS          varchar(45) NOT NULL  ,
	CONSTRAINT PRIMARY5 PRIMARY KEY ( USID )
 );

CREATE TABLE ORGANISATION ( 
	OID                  INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
	NAME                 varchar(45) NOT NULL  ,
	ORGANISATION_TYPE_OID integer NOT NULL  ,
	ADDRESS              varchar(45) NOT NULL  ,
	POSTCODE             varchar(45) NOT NULL  ,
	PHONE_NUMBER         varchar(45) NOT NULL  ,
	CONSTRAINT PRIMARY4 PRIMARY KEY ( OID )
 );

CREATE INDEX SQL201212021331650 ON ORGANISATION ( ORGANISATION_TYPE_OID );

CREATE TABLE USERS ( 
	UUID                 INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
	USERNAME             varchar(40) NOT NULL  ,
	PASS                 varchar(40) NOT NULL  ,
	EMAIL                varchar(40) NOT NULL  ,
	CREATED              timestamp NOT NULL  ,
	LAST_ACCESS          timestamp NOT NULL  ,
	LOGGED_IN            integer NOT NULL  ,
	PICTURE              varchar(128) NOT NULL  ,
	USER_STATUS_USID     integer NOT NULL  ,
	CONSTRAINT PRIMARY6 PRIMARY KEY ( UUID )
 );

CREATE INDEX SQL201212021331700 ON USERS ( USER_STATUS_USID );

CREATE TABLE WATCHDOG ( 
	WID                  INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
	USERS_UID            integer NOT NULL  ,
	TYPE                 varchar(64) NOT NULL  ,
	MESSAGE              clob(2147483647) NOT NULL  ,
	TIMESTAMP            integer NOT NULL  ,
	CONSTRAINT PRIMARY13 PRIMARY KEY ( WID )
 );

CREATE INDEX SQL201212021331720 ON WATCHDOG ( USERS_UID );

CREATE TABLE EMPLOYEE ( 
	EID                  INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
	SALARY               double NOT NULL  ,
	ADDRESS              varchar(40) NOT NULL  ,
	EMPLOYEE_TYPE_TID    integer NOT NULL  ,
	ORGANISATION_OID     integer NOT NULL  ,
	USERS_UUID           integer NOT NULL  ,
	CONSTRAINT PRIMARY7 PRIMARY KEY ( EID )
 );

CREATE INDEX SQL201212021331830 ON EMPLOYEE ( EMPLOYEE_TYPE_TID );

CREATE INDEX SQL201212021331940 ON EMPLOYEE ( ORGANISATION_OID );

CREATE INDEX SQL201212021332050 ON EMPLOYEE ( USERS_UUID );

CREATE TABLE PATIENT ( 
	PID                  INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
	NAME                 varchar(45) NOT NULL  ,
	ADDRESS              varchar(45) NOT NULL  ,
	PATIENT_TYPE_PTID    integer NOT NULL  ,
	USERS_UUID           integer NOT NULL  ,
	CONSTRAINT PRIMARY9 PRIMARY KEY ( PID )
 );

CREATE INDEX SQL201212021331840 ON PATIENT ( PATIENT_TYPE_PTID );

CREATE INDEX SQL201212021331950 ON PATIENT ( USERS_UUID );

CREATE TABLE PATIENT_PRESCRIPTIONS ( 
	PRID                 INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
	PATIENT_PID          integer NOT NULL  ,
	MEDICINE             varchar(45) NOT NULL  ,
	CONSTRAINT PRIMARY10 PRIMARY KEY ( PRID )
 );

CREATE INDEX SQL201212021331710 ON PATIENT_PRESCRIPTIONS ( PATIENT_PID );

CREATE TABLE APPOINTMENT ( 
	AID                  INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
	START_TIME           timestamp NOT NULL  ,
	END_TIME             timestamp NOT NULL  ,
	DURATION             integer NOT NULL  ,
	NOTES                varchar(45) NOT NULL  ,
	CHARGE               double NOT NULL  ,
	PATIENT_PID          integer NOT NULL  ,
	EMPLOYEE_EID         integer NOT NULL  ,
	APPOINTMENT_TYPE_ATID integer NOT NULL  ,
	PATIENT_PRESCRIPTIONS_PRID integer NOT NULL  ,
	APPOINTMENT_STATUS_ASID integer NOT NULL  ,
	CONSTRAINT PRIMARY11 PRIMARY KEY ( AID )
 );

CREATE INDEX SQL201212021331850 ON APPOINTMENT ( APPOINTMENT_STATUS_ASID );

CREATE INDEX SQL201212021331951 ON APPOINTMENT ( APPOINTMENT_TYPE_ATID );

CREATE INDEX SQL201212021332070 ON APPOINTMENT ( EMPLOYEE_EID );

CREATE INDEX SQL201212021332160 ON APPOINTMENT ( PATIENT_PID );

CREATE INDEX SQL201212021332270 ON APPOINTMENT ( PATIENT_PRESCRIPTIONS_PRID );

CREATE TABLE FUTURE_APPOINTMENTS ( 
	FAID                 INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
	FUTURE_START_TIME    timestamp NOT NULL  ,
	FUTURE_END_TIME      timestamp NOT NULL  ,
	DURATION             integer NOT NULL  ,
	PATIENT_PID          integer NOT NULL  ,
	EMPLOYEE_EID         integer NOT NULL  ,
	CONSTRAINT PRIMARY12 PRIMARY KEY ( FAID )
 );

CREATE INDEX SQL201212021331860 ON FUTURE_APPOINTMENTS ( EMPLOYEE_EID );

CREATE INDEX SQL201212021331960 ON FUTURE_APPOINTMENTS ( PATIENT_PID );

ALTER TABLE APPOINTMENT ADD CONSTRAINT FK_APPOINTMENT_APPOINTMENT_STATUS1 FOREIGN KEY ( APPOINTMENT_STATUS_ASID ) REFERENCES APPOINTMENT_STATUS( ASID ) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE APPOINTMENT ADD CONSTRAINT FK_APPOINTMENT_APPOINTMENT_TYPE1 FOREIGN KEY ( APPOINTMENT_TYPE_ATID ) REFERENCES APPOINTMENT_TYPE( ATID ) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE APPOINTMENT ADD CONSTRAINT FK_APPOINTMENT_EMPLOYEE1 FOREIGN KEY ( EMPLOYEE_EID ) REFERENCES EMPLOYEE( EID ) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE APPOINTMENT ADD CONSTRAINT FK_APPOINTMENT_PATIENT1 FOREIGN KEY ( PATIENT_PID ) REFERENCES PATIENT( PID ) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE APPOINTMENT ADD CONSTRAINT FK_APPOINTMENT_PATIENT_PRESCRIPTIONS1 FOREIGN KEY ( PATIENT_PRESCRIPTIONS_PRID ) REFERENCES PATIENT_PRESCRIPTIONS( PRID ) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE EMPLOYEE ADD CONSTRAINT FK_EMPLOYEE_EMPLOYEE_TYPE1 FOREIGN KEY ( EMPLOYEE_TYPE_TID ) REFERENCES EMPLOYEE_TYPE( ETID ) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE EMPLOYEE ADD CONSTRAINT FK_EMPLOYEE_ORGANISATION1 FOREIGN KEY ( ORGANISATION_OID ) REFERENCES ORGANISATION( OID ) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE EMPLOYEE ADD CONSTRAINT FK_EMPLOYEE_USERS1 FOREIGN KEY ( USERS_UUID ) REFERENCES USERS( UUID ) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE FUTURE_APPOINTMENTS ADD CONSTRAINT FK_FUTURE_APPOINTMENTS_EMPLOYEE1 FOREIGN KEY ( EMPLOYEE_EID ) REFERENCES EMPLOYEE( EID ) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE FUTURE_APPOINTMENTS ADD CONSTRAINT FK_FUTURE_APPOINTMENTS_PATIENT1 FOREIGN KEY ( PATIENT_PID ) REFERENCES PATIENT( PID ) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE ORGANISATION ADD CONSTRAINT FK_ORGANISATION_ORGANISATION_TYPE1 FOREIGN KEY ( ORGANISATION_TYPE_OID ) REFERENCES ORGANISATION_TYPE( OTID ) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE PATIENT ADD CONSTRAINT FK_PATIENT_PATIENT_TYPE1 FOREIGN KEY ( PATIENT_TYPE_PTID ) REFERENCES PATIENT_TYPE( PTID ) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE PATIENT ADD CONSTRAINT FK_PATIENT_USERS1 FOREIGN KEY ( USERS_UUID ) REFERENCES USERS( UUID ) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE PATIENT_PRESCRIPTIONS ADD CONSTRAINT FK_PATIENT_RECORDS_PATIENT1 FOREIGN KEY ( PATIENT_PID ) REFERENCES PATIENT( PID ) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE USERS ADD CONSTRAINT FK_USERS_USER_STATUS1 FOREIGN KEY ( USER_STATUS_USID ) REFERENCES USER_STATUS( USID ) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE WATCHDOG ADD CONSTRAINT FK_WATCHDOG_USERS1 FOREIGN KEY ( USERS_UID ) REFERENCES USERS( UUID ) ON DELETE NO ACTION ON UPDATE NO ACTION;

